[tox]
envlist = py35,py36,py37,flake8,pylint,packaging
minversion = 2.7.0

## Configure test + coverage process

[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config dist build
xfail_strict = True
rsyncdirs = src tests
looponfailroots = src tests

[coverage:run]
branch = True
source =
    src
    tests
omit = **/_[a-zA-Z0-9]*.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    pass
    raise AssertionError
    raise NotImplementedError

[testenv]
description = Run tests with coverage with pytest under current Python env
setenv = COVERAGE_FILE=.coverage.{envname}
passenv = CI TRAVIS TRAVIS_*
deps =
    -rtests/requirements.txt
    coverage
usedevelop = True
commands =
    coverage run --parallel-mode setup.py test --addopts '--timeout=180 {posargs}'
    coverage combine
    coverage report -m

[testenv:final-coverage]
description = Combine coverage data across environments (run after tests)
skip_install = True
setenv = COVERAGE_FILE=.coverage
passenv = {[testenv]passenv}
deps = coverage
commands =
    coverage erase
    coverage combine
    coverage report -m
    coverage xml

[testenv:codecov]
description = Upload coverage data to codecov (only run on CI)
setenv =
    {[testenv:final-coverage]setenv}
passenv = {[testenv]passenv}
deps = codecov
commands = codecov --required

## Setup development process

[testenv:devel]
description = Incremental devel env command, defaults to running tests
deps =
    -rtests/requirements.txt
usedevelop = True
commands =
    python setup.py test --addopts '-vvv --exitfirst --looponfail {posargs}'

## Configure linters

[flake8]
count = True
show-source = True
doctests = True
# select = E, F, W, C90, I, D, B, B902
ignore =
    # blank-line after doc summaries (annoying for modules' doc)
    D205
    # conflicts with D211: No blank lines allowed before class docstring
    D203
    # do not enforce first-line-period at module docs
    D400
    # conflicts with E133: closing bracket is missing indentation
    E123
exclude =
    .tox,
    .git,
    __pycache__,
    config,
    build,
    dist,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
max-line-length = 100
# McCabe complexity checker
max-complexity = 20
# flake8-import-order: style
import-order-style = google
# flake8-import-order: local module name checker
application-import-names = orion, versioneer

[testenv:flake8]
description = Use flake8 linter to impose standards on the project
basepython = python3.6
skip_install = true
deps =
    flake8 == 3.5.0
    flake8-import-order == 0.15
    flake8-docstrings == 1.1.0
    flake8-bugbear == 17.4.0
commands =
    flake8 src/orion/ tests/ setup.py

[testenv:pylint]
description = Perform static analysis and output code metrics
basepython = python3.6
skip_install = true
deps =
    pylint == 1.8.1
commands =
    pylint src/orion/algo/skopt/bayes.py

[testenv:packaging]
description = Check whether README.rst is reST and missing from MANIFEST.in
basepython = python3.6
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest
    python setup.py check -r -s

[testenv:lint]
description = Lint code and docs against some standard standards
basepython = python3.6
skip_install = false
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:packaging]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:packaging]commands}

## Release tooling (to be removed in favor of CI with CD)

[testenv:build]
basepython = python3.6
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3.6
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*
