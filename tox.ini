[tox]
envlist = py{36,37,38,39}-{linux,macos}

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    pypy3: pypy3

[testenv]
description = Run tests with coverage with pytest under current Python env
setenv = COVERAGE_FILE=.coverage.{envname}
passenv = CI
deps =
    -rtests/requirements.txt
    coverage
usedevelop = True
commands =
    coverage run --parallel-mode -m pytest -vv --timeout=180 {posargs}
    coverage combine
    coverage report -m
    coverage xml

[testenv:final-coverage]
description = Combine coverage data across environments (run after tests)
skip_install = True
setenv = COVERAGE_FILE=.coverage
passenv = {[testenv]passenv}
deps = coverage
commands =
    coverage erase
    coverage combine
    coverage report -m
    coverage xml

[testenv:codecov]
description = Upload coverage data to codecov (only run on CI)
setenv =
    {[testenv:final-coverage]setenv}
passenv = {[testenv]passenv}
deps = codecov
commands = codecov --required

## Configure linters

[testenv:lint]
description = Lint code and docs against some standard standards
basepython = python3
skip_install = false
deps =
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:pylint]deps}
    {[testenv:packaging]deps}
commands =
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:pylint]commands}
    {[testenv:packaging]commands}

[testenv:black]
description = Verify code style with black
basepython = python3
skip_install = true
deps =
    black == 20.8b1
commands =
    black --check src/orion/ tests/

[testenv:run-black]
description = Run code style modification with black
basepython = python3
skip_install = true
deps =
    {[testenv:black]deps}
commands =
    black src/orion/ tests/

[testenv:isort]
description = Use isort to check import orders
basepython = python3
skip_install = true
deps =
    isort == 5.6.*
commands =
    isort --profile black -c src/orion/ tests/

[testenv:run-isort]
description = Run isort to fix import orders
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
commands =
    isort --profile black src/orion/ tests/

[testenv:pylint] # Will use the configuration file `.pylintrc` automatically
description = Perform static analysis and output code metrics
basepython = python3
skip_install = false
deps =
    pylint == 2.5.*
commands =
    pylint src/orion/algo/skopt/bayes.py

[testenv:packaging]
description = Check whether README.rst is reST and missing from MANIFEST.in
basepython = python3
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest
    python setup.py check -r -s

## Setup development process

[testenv:devel]
description = Incremental devel env command, defaults to running tests
deps =
    -rtests/requirements.txt
usedevelop = True
commands =
    python setup.py test --addopts '-vvv --exitfirst --looponfail {posargs}'

[testenv:doc8]
description = Impose standards on *.rst documentation files
basepython = python3
skip_install = true
deps =
    doc8 == 0.8.*
commands =
    doc8 docs/

[testenv:docs]
description = Invoke sphinx to build documentation and API reference
basepython = python3
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -b html -d build/doctrees -nWT docs/src/ docs/build/html

[testenv:serve-docs]
description = Host the documentation of the project and API reference in localhost
basepython = python3
skip_install = true
changedir = docs/build/html
deps =
commands =
    python -m http.server 8000 --bind 127.0.0.1

## Release tooling (to be removed in favor of CI with CD)

[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

#########################################################
# Packages & Tools configuration
#########################################################

[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config dist build
xfail_strict = True
rsyncdirs = src tests
looponfailroots = src tests

[coverage:run]
branch = True
source =
    src
    tests
omit = **/_[a-zA-Z0-9]*.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    pass
    raise AssertionError
    raise NotImplementedError

# Doc8 configuration
[doc8]
max-line-length = 100
file-encoding = utf-8
